# coding: utf-8

"""
    Edge Firewall API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field, StrictStr, conint, validator

class SetWAFRuleSetAndWafModeBehaviorArgument(BaseModel):
    """
    SetWAFRuleSetAndWafModeBehaviorArgument
    """
    set_waf_ruleset_and_waf_mode: conint(strict=True, ge=1) = Field(...)
    waf_mode: StrictStr = Field(...)
    __properties = ["set_waf_ruleset_and_waf_mode", "waf_mode"]

    @validator('waf_mode')
    def waf_mode_validate_enum(cls, value):
        """Validates the enum"""
        if value not in ('learning', 'blocking'):
            raise ValueError("must be one of enum values ('learning', 'blocking')")
        return value

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> SetWAFRuleSetAndWafModeBehaviorArgument:
        """Create an instance of SetWAFRuleSetAndWafModeBehaviorArgument from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> SetWAFRuleSetAndWafModeBehaviorArgument:
        """Create an instance of SetWAFRuleSetAndWafModeBehaviorArgument from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return SetWAFRuleSetAndWafModeBehaviorArgument.parse_obj(obj)

        _obj = SetWAFRuleSetAndWafModeBehaviorArgument.parse_obj({
            "set_waf_ruleset_and_waf_mode": obj.get("set_waf_ruleset_and_waf_mode"),
            "waf_mode": obj.get("waf_mode")
        })
        return _obj


