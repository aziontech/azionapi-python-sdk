# coding: utf-8

"""
    Edge Application API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from edgeapplications import schemas  # noqa: F401


class PatchOriginsRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            name = schemas.StrSchema
            origin_type = schemas.StrSchema
            
            
            class addresses(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['CreateOriginsRequestAddresses']:
                        return CreateOriginsRequestAddresses
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['CreateOriginsRequestAddresses'], typing.List['CreateOriginsRequestAddresses']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'addresses':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'CreateOriginsRequestAddresses':
                    return super().__getitem__(i)
            origin_protocol_policy = schemas.StrSchema
            host_header = schemas.StrSchema
            origin_path = schemas.StrSchema
            hmac_authentication = schemas.BoolSchema
            hmac_region_name = schemas.StrSchema
            hmac_access_key = schemas.StrSchema
            hmac_secret_key = schemas.StrSchema
            __annotations__ = {
                "name": name,
                "origin_type": origin_type,
                "addresses": addresses,
                "origin_protocol_policy": origin_protocol_policy,
                "host_header": host_header,
                "origin_path": origin_path,
                "hmac_authentication": hmac_authentication,
                "hmac_region_name": hmac_region_name,
                "hmac_access_key": hmac_access_key,
                "hmac_secret_key": hmac_secret_key,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["origin_type"]) -> MetaOapg.properties.origin_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addresses"]) -> MetaOapg.properties.addresses: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["origin_protocol_policy"]) -> MetaOapg.properties.origin_protocol_policy: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["host_header"]) -> MetaOapg.properties.host_header: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["origin_path"]) -> MetaOapg.properties.origin_path: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hmac_authentication"]) -> MetaOapg.properties.hmac_authentication: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hmac_region_name"]) -> MetaOapg.properties.hmac_region_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hmac_access_key"]) -> MetaOapg.properties.hmac_access_key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hmac_secret_key"]) -> MetaOapg.properties.hmac_secret_key: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["name"], typing_extensions.Literal["origin_type"], typing_extensions.Literal["addresses"], typing_extensions.Literal["origin_protocol_policy"], typing_extensions.Literal["host_header"], typing_extensions.Literal["origin_path"], typing_extensions.Literal["hmac_authentication"], typing_extensions.Literal["hmac_region_name"], typing_extensions.Literal["hmac_access_key"], typing_extensions.Literal["hmac_secret_key"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["origin_type"]) -> typing.Union[MetaOapg.properties.origin_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addresses"]) -> typing.Union[MetaOapg.properties.addresses, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["origin_protocol_policy"]) -> typing.Union[MetaOapg.properties.origin_protocol_policy, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["host_header"]) -> typing.Union[MetaOapg.properties.host_header, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["origin_path"]) -> typing.Union[MetaOapg.properties.origin_path, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hmac_authentication"]) -> typing.Union[MetaOapg.properties.hmac_authentication, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hmac_region_name"]) -> typing.Union[MetaOapg.properties.hmac_region_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hmac_access_key"]) -> typing.Union[MetaOapg.properties.hmac_access_key, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hmac_secret_key"]) -> typing.Union[MetaOapg.properties.hmac_secret_key, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["name"], typing_extensions.Literal["origin_type"], typing_extensions.Literal["addresses"], typing_extensions.Literal["origin_protocol_policy"], typing_extensions.Literal["host_header"], typing_extensions.Literal["origin_path"], typing_extensions.Literal["hmac_authentication"], typing_extensions.Literal["hmac_region_name"], typing_extensions.Literal["hmac_access_key"], typing_extensions.Literal["hmac_secret_key"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        origin_type: typing.Union[MetaOapg.properties.origin_type, str, schemas.Unset] = schemas.unset,
        addresses: typing.Union[MetaOapg.properties.addresses, list, tuple, schemas.Unset] = schemas.unset,
        origin_protocol_policy: typing.Union[MetaOapg.properties.origin_protocol_policy, str, schemas.Unset] = schemas.unset,
        host_header: typing.Union[MetaOapg.properties.host_header, str, schemas.Unset] = schemas.unset,
        origin_path: typing.Union[MetaOapg.properties.origin_path, str, schemas.Unset] = schemas.unset,
        hmac_authentication: typing.Union[MetaOapg.properties.hmac_authentication, bool, schemas.Unset] = schemas.unset,
        hmac_region_name: typing.Union[MetaOapg.properties.hmac_region_name, str, schemas.Unset] = schemas.unset,
        hmac_access_key: typing.Union[MetaOapg.properties.hmac_access_key, str, schemas.Unset] = schemas.unset,
        hmac_secret_key: typing.Union[MetaOapg.properties.hmac_secret_key, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'PatchOriginsRequest':
        return super().__new__(
            cls,
            *_args,
            name=name,
            origin_type=origin_type,
            addresses=addresses,
            origin_protocol_policy=origin_protocol_policy,
            host_header=host_header,
            origin_path=origin_path,
            hmac_authentication=hmac_authentication,
            hmac_region_name=hmac_region_name,
            hmac_access_key=hmac_access_key,
            hmac_secret_key=hmac_secret_key,
            _configuration=_configuration,
        )

from edgeapplications.model.create_origins_request_addresses import CreateOriginsRequestAddresses
