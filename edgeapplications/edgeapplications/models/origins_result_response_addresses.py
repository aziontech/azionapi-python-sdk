# coding: utf-8

"""
    Edge Application API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictBool, StrictStr

class OriginsResultResponseAddresses(BaseModel):
    """
    OriginsResultResponseAddresses
    """
    address: StrictStr = Field(...)
    weight: Optional[StrictStr] = Field(...)
    server_role: StrictStr = Field(...)
    is_active: StrictBool = Field(...)
    __properties = ["address", "weight", "server_role", "is_active"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> OriginsResultResponseAddresses:
        """Create an instance of OriginsResultResponseAddresses from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # set to None if weight (nullable) is None
        # and __fields_set__ contains the field
        if self.weight is None and "weight" in self.__fields_set__:
            _dict['weight'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> OriginsResultResponseAddresses:
        """Create an instance of OriginsResultResponseAddresses from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return OriginsResultResponseAddresses.parse_obj(obj)

        _obj = OriginsResultResponseAddresses.parse_obj({
            "address": obj.get("address"),
            "weight": obj.get("weight"),
            "server_role": obj.get("server_role"),
            "is_active": obj.get("is_active")
        })
        return _obj


