# coding: utf-8

"""
    Edge Node API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from edgenode import schemas  # noqa: F401


class ServiceResponse(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "bind_id",
            "is_bound",
            "updated_at",
            "last_editor",
            "service_id",
            "name",
        }
        
        class properties:
            bind_id = schemas.Int64Schema
            is_bound = schemas.Int64Schema
            last_editor = schemas.StrSchema
            name = schemas.StrSchema
            service_id = schemas.Int64Schema
            updated_at = schemas.DateTimeSchema
            __annotations__ = {
                "bind_id": bind_id,
                "is_bound": is_bound,
                "last_editor": last_editor,
                "name": name,
                "service_id": service_id,
                "updated_at": updated_at,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    bind_id: MetaOapg.properties.bind_id
    is_bound: MetaOapg.properties.is_bound
    updated_at: MetaOapg.properties.updated_at
    last_editor: MetaOapg.properties.last_editor
    service_id: MetaOapg.properties.service_id
    name: MetaOapg.properties.name
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bind_id"]) -> MetaOapg.properties.bind_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_bound"]) -> MetaOapg.properties.is_bound: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["updated_at"]) -> MetaOapg.properties.updated_at: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["last_editor"]) -> MetaOapg.properties.last_editor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["service_id"]) -> MetaOapg.properties.service_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["bind_id"], typing_extensions.Literal["is_bound"], typing_extensions.Literal["updated_at"], typing_extensions.Literal["last_editor"], typing_extensions.Literal["service_id"], typing_extensions.Literal["name"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bind_id"]) -> MetaOapg.properties.bind_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_bound"]) -> MetaOapg.properties.is_bound: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["updated_at"]) -> MetaOapg.properties.updated_at: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["last_editor"]) -> MetaOapg.properties.last_editor: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["service_id"]) -> MetaOapg.properties.service_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["bind_id"], typing_extensions.Literal["is_bound"], typing_extensions.Literal["updated_at"], typing_extensions.Literal["last_editor"], typing_extensions.Literal["service_id"], typing_extensions.Literal["name"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        bind_id: typing.Union[MetaOapg.properties.bind_id, decimal.Decimal, int, ],
        is_bound: typing.Union[MetaOapg.properties.is_bound, decimal.Decimal, int, ],
        updated_at: typing.Union[MetaOapg.properties.updated_at, str, datetime, ],
        last_editor: typing.Union[MetaOapg.properties.last_editor, str, ],
        service_id: typing.Union[MetaOapg.properties.service_id, decimal.Decimal, int, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'ServiceResponse':
        return super().__new__(
            cls,
            *_args,
            bind_id=bind_id,
            is_bound=is_bound,
            updated_at=updated_at,
            last_editor=last_editor,
            service_id=service_id,
            name=name,
            _configuration=_configuration,
        )
