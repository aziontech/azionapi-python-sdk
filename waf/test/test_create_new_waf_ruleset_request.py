# coding: utf-8

"""
    Web Application Firewall API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from waf.models.create_new_waf_ruleset_request import CreateNewWAFRulesetRequest  # noqa: E501

class TestCreateNewWAFRulesetRequest(unittest.TestCase):
    """CreateNewWAFRulesetRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateNewWAFRulesetRequest:
        """Test CreateNewWAFRulesetRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateNewWAFRulesetRequest`
        """
        model = CreateNewWAFRulesetRequest()  # noqa: E501
        if include_optional:
            return CreateNewWAFRulesetRequest(
                id = 56,
                name = '',
                mode = 'blocking',
                active = True,
                sql_injection = True,
                sql_injection_sensitivity = 'lowest',
                remote_file_inclusion = True,
                remote_file_inclusion_sensitivity = 'lowest',
                directory_traversal = True,
                directory_traversal_sensitivity = 'lowest',
                cross_site_scripting = True,
                cross_site_scripting_sensitivity = 'lowest',
                evading_tricks = True,
                evading_tricks_sensitivity = 'lowest',
                file_upload = True,
                file_upload_sensitivity = 'lowest',
                unwanted_access = True,
                unwanted_access_sensitivity = 'lowest',
                identified_attack = True,
                identified_attack_sensitivity = 'lowest',
                bypass_addresses = [
                    ''
                    ]
            )
        else:
            return CreateNewWAFRulesetRequest(
                name = '',
                mode = 'blocking',
                active = True,
                sql_injection = True,
                sql_injection_sensitivity = 'lowest',
                remote_file_inclusion = True,
                remote_file_inclusion_sensitivity = 'lowest',
                directory_traversal = True,
                directory_traversal_sensitivity = 'lowest',
                cross_site_scripting = True,
                cross_site_scripting_sensitivity = 'lowest',
                evading_tricks = True,
                evading_tricks_sensitivity = 'lowest',
                file_upload = True,
                file_upload_sensitivity = 'lowest',
                unwanted_access = True,
                unwanted_access_sensitivity = 'lowest',
                identified_attack = True,
                identified_attack_sensitivity = 'lowest',
                bypass_addresses = [
                    ''
                    ],
        )
        """

    def testCreateNewWAFRulesetRequest(self):
        """Test CreateNewWAFRulesetRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
