# coding: utf-8

"""
    Intelligent DNS API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from idns.models.dns_sec import DnsSec  # noqa: E501

class TestDnsSec(unittest.TestCase):
    """DnsSec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DnsSec:
        """Test DnsSec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DnsSec`
        """
        model = DnsSec()  # noqa: E501
        if include_optional:
            return DnsSec(
                is_enabled = True,
                status = 'unconfigured',
                delegation_signer = {"key_tag":9607,"digest_type":{"id":6,"slug":"slug"},"algorithm_type":{"id":6,"slug":"slug"},"digest":"digest"}
            )
        else:
            return DnsSec(
        )
        """

    def testDnsSec(self):
        """Test DnsSec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
